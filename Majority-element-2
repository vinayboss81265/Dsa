class Solution {
public:
    vector<int> majorityElement(vector<int>& arr) {
         int n=arr.size();
        vector<int> ans;
        // unordered_map<int,int> mp;
        // for(int i=0;i<n;i++){
        //     mp[nums[i]]++;
        // }
        
        // for(auto it:mp){
        //     if(it.second>n/3){
        //         ans.push_back(it.first);
        //     }
        // }
        
        // sort(ans.begin(),ans.end());
        ////////////////////////////////////
        int cnt1=0,cnt2=0;
        int ele1=-1,ele2=-1;
        
        for(auto ele:arr){
            if(ele1==ele){
                cnt1++;
            }
            else if(ele2==ele){
                cnt2++;
            }
            else if(cnt1==0){
                ele1=ele;
                cnt1++;
            }
            else if(cnt2==0){
                ele2=ele;
                cnt2++;
            }
            else{
                cnt1--;
                cnt2--;
            }
        }
        
        
        cnt1=0;
        cnt2=0;
        
        for(auto ele:arr){
            if(ele1==ele){
                cnt1++;
            }
            if(ele2==ele){
                cnt2++;
            }
        }
        
        
        if(cnt1>n/3){
            ans.push_back(ele1);
        }
        if(cnt2>n/3 && ele1!=ele2){
            ans.push_back(ele2);
        }
        
        if(ans.size()==2 && ans[0]>ans[1]){
            swap(ans[0],ans[1]);
        }
       
        
        return ans;
    }
};
